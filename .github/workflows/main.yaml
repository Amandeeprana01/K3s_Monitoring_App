name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker registry
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login ${{ secrets.DOCKER_REGISTRY_URL }} --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and Push Docker image
        run: |
          # Create a unique image name using the Git commit SHA as the tag.
          IMAGE_FULL_NAME=${{ secrets.DOCKER_REGISTRY_URL }}/${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:${{ github.sha }}
          
          cd Python_App/  # change this if your Dockerfile is elsewhere
          docker build . --file Dockerfile --tag "$IMAGE_FULL_NAME"
          docker push "$IMAGE_FULL_NAME"
          
          # Save IMAGE_FULL_NAME for later steps
          echo "IMAGE_FULL_NAME=$IMAGE_FULL_NAME" >> $GITHUB_ENV

      - name: Configure Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_BASE64 }}" | base64 --decode > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
          sed -i 's|server:.*|server: https://localhost:6443|g' $HOME/.kube/config

      - name: Wait for K3s to be ready
        run: |
          echo "Waiting for K3s API server to become available..."
          for i in {1..60}; do
            if kubectl cluster-info &>/dev/null; then
              echo "K3s is ready."
              exit 0
            fi
            sleep 1
          done
          echo "K3s API server did not become available in time. Exiting."
          exit 1

      - name: Deploy to K3s Cluster
        run: |
          kubectl apply -f k3s/deployment.yaml
          
          # Force rollout with new image
          kubectl set image deployment/python-app python-app=$IMAGE_FULL_NAME
          
          kubectl apply -f k3s/service.yaml
